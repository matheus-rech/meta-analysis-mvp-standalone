name: CI Notifications

on:
  workflow_run:
    workflows: ["Build and Push Docker Image"]
    types: [completed]

jobs:
  notify:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: write
    steps:
      - name: Prepare message
        id: prep
        run: |
          echo "STATUS=${{ github.event.workflow_run.conclusion }}" >> $GITHUB_OUTPUT
          echo "URL=${{ github.event.workflow_run.html_url }}" >> $GITHUB_OUTPUT
          echo "BRANCH=${{ github.event.workflow_run.head_branch }}" >> $GITHUB_OUTPUT
          echo "SHA=${{ github.event.workflow_run.head_sha }}" >> $GITHUB_OUTPUT

      - name: Slack notify (if webhook configured)
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: ${{ env.SLACK_WEBHOOK_URL != '' }}
        run: |
          payload=$(jq -n --arg status "${{ steps.prep.outputs.STATUS }}" \
                          --arg url "${{ steps.prep.outputs.URL }}" \
                          --arg branch "${{ steps.prep.outputs.BRANCH }}" \
                          --arg sha "${{ steps.prep.outputs.SHA }}" \
                          '{text: ("CI (Build and Push Docker Image) finished with status: " + $status + "\nBranch: " + $branch + "\nSHA: " + $sha + "\n" + $url)}')
          curl -s -X POST -H 'Content-type: application/json' --data "$payload" "$SLACK_WEBHOOK_URL"

      - name: Fallback GitHub issue update
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: ${{ env.SLACK_WEBHOOK_URL == '' }}
        run: |
          title="CI: Build and Push Docker Image completed (${{ steps.prep.outputs.STATUS }})"
          body="Workflow: ${{ steps.prep.outputs.URL }}\nBranch: ${{ steps.prep.outputs.BRANCH }}\nSHA: ${{ steps.prep.outputs.SHA }}"
          existing=$(gh issue list --state open --search "in:title $title" --json number -q '.[0].number' || true)
          if [ -z "$existing" ]; then
            gh issue create --title "$title" --body "$body" || true
          else
            gh issue comment "$existing" --body "$body" || true
          fi

